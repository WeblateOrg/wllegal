# Copyright © Michal Čihař <michal@weblate.org>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version:
        - '3.11'
        - '3.12'
        - '3.13'
        - '3.14'
    name: Python ${{ matrix.python-version }}

    services:
      redis:
        image: redis:8.2.2-alpine@sha256:b4ab73ca1f4e12c803845e561c07ccc365d2be7c9b048459e679b8ce73da4056
        ports:
        - 6379:6379
      postgres:
        image: postgres:18.0-alpine@sha256:fe5874a6484052c5353272650bb0b21f35082465f82907df4dfb1fe25f042610
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Install apt dependencies
      run: |
        sudo apt update
        sudo apt install libcairo-dev gir1.2-pango-1.0 libgirepository-2.0-dev libacl1-dev gettext liblz4-dev libzstd-dev libxxhash-dev gir1.2-rsvg-2.0 libleptonica-dev libtesseract-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0
      with:
        cache-suffix: test
    - name: Install pip dependencies
      run: |
        uv pip install --system ".[test]"
    - name: Test with Django
      env:
        CI_DATABASE: postgresql
        CI_DB_PASSWORD: postgres
        CI_DB_HOST: localhost
        DJANGO_SETTINGS_MODULE: wllegal.settings_test
      run: |
        weblate collectstatic
        coverage run "$(which weblate)" test
    - name: Coverage
      run: |
        coverage combine
        coverage xml
    - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: unittests
        name: Python ${{ matrix.python-version }}
permissions:
  contents: read
